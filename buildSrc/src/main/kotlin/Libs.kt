/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
    /**
     * https://github.com/Kotlin/kotlinx.serialization
     */
    const val kotlinx_serialization_runtime: String =
        "org.jetbrains.kotlinx:kotlinx-serialization-runtime:" +
                Versions.org_jetbrains_kotlinx_kotlinx_serialization

    /**
     * https://arturbosch.github.io/detekt
     */
    const val detekt_formatting: String = "io.gitlab.arturbosch.detekt:detekt-formatting:" +
            Versions.io_gitlab_arturbosch_detekt

    const val io_gitlab_arturbosch_detekt_gradle_plugin: String =
        "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin:" +
                Versions.io_gitlab_arturbosch_detekt

    /**
     * https://github.com/bumptech/glide
     */
    const val com_github_bumptech_glide_compiler: String = "com.github.bumptech.glide:compiler:" +
            Versions.com_github_bumptech_glide

    /**
     * https://github.com/bumptech/glide
     */
    const val glide: String = "com.github.bumptech.glide:glide:" +
            Versions.com_github_bumptech_glide

    /**
     * https://github.com/bumptech/glide
     */
    const val okhttp3_integration: String = "com.github.bumptech.glide:okhttp3-integration:" +
            Versions.com_github_bumptech_glide

    /**
     * https://developer.android.com/testing
     */
    const val espresso_contrib: String = "androidx.test.espresso:espresso-contrib:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing
     */
    const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
            Versions.androidx_test_espresso

    /**
     * https://developer.android.com/testing
     */
    const val espresso_idling_resource: String =
        "androidx.test.espresso:espresso-idling-resource:" + Versions.androidx_test_espresso

    /**
     * https://github.com/LouisCAD/Splitties
     */
    const val splitties_alertdialog_appcompat: String =
        "com.louiscad.splitties:splitties-alertdialog-appcompat:" +
                Versions.com_louiscad_splitties

    /**
     * https://github.com/LouisCAD/Splitties
     */
    const val splitties_preferences: String = "com.louiscad.splitties:splitties-preferences:" +
            Versions.com_louiscad_splitties

    /**
     * https://github.com/LouisCAD/Splitties
     */
    const val splitties_resources: String = "com.louiscad.splitties:splitties-resources:" +
            Versions.com_louiscad_splitties

    /**
     * https://github.com/LouisCAD/Splitties
     */
    const val splitties_systemservices: String =
        "com.louiscad.splitties:splitties-systemservices:" + Versions.com_louiscad_splitties

    /**
     * https://github.com/LouisCAD/Splitties
     */
    const val splitties_toast: String = "com.louiscad.splitties:splitties-toast:" +
            Versions.com_louiscad_splitties

    /**
     * https://github.com/square/retrofit/
     */
    const val adapter_rxjava2: String = "com.squareup.retrofit2:adapter-rxjava2:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/
     */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/okhttp
     */
    const val logging_interceptor: String = "com.squareup.okhttp3:logging-interceptor:" +
            Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/okhttp
     */
    const val mockwebserver: String = "com.squareup.okhttp3:mockwebserver:" +
            Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/okhttp
     */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.com_squareup_okhttp3

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions: String =
        "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions_runtime: String =
        "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" +
                Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_annotation_processing_gradle: String =
        "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" +
                Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_serialization: String = "org.jetbrains.kotlin:kotlin-serialization:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_serialization_unshaded: String =
        "org.jetbrains.kotlin:kotlin-serialization-unshaded:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_test_junit: String = "org.jetbrains.kotlin:kotlin-test-junit:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_fragment_ktx: String = "androidx.navigation:navigation-fragment-ktx:" +
            Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_safe_args_gradle_plugin: String =
        "androidx.navigation:navigation-safe-args-gradle-plugin:" + Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_ui_ktx: String = "androidx.navigation:navigation-ui-ktx:" +
            Versions.androidx_navigation

    /**
     * https://github.com/square/AssistedInject/
     */
    const val assisted_inject_annotations_dagger2: String =
        "com.squareup.inject:assisted-inject-annotations-dagger2:" +
                Versions.com_squareup_inject

    /**
     * https://github.com/square/AssistedInject/
     */
    const val assisted_inject_processor_dagger2: String =
        "com.squareup.inject:assisted-inject-processor-dagger2:" + Versions.com_squareup_inject

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val core_runtime: String = "androidx.arch.core:core-runtime:" +
            Versions.androidx_arch_core

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val core_testing: String = "androidx.arch.core:core-testing:" +
            Versions.androidx_arch_core

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_common_java8: String = "androidx.lifecycle:lifecycle-common-java8:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_process: String = "androidx.lifecycle:lifecycle-process:" +
            Versions.androidx_lifecycle

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val lifecycle_viewmodel_ktx: String = "androidx.lifecycle:lifecycle-viewmodel-ktx:" +
            Versions.androidx_lifecycle

    /**
     * https://github.com/google/dagger
     */
    const val dagger_android: String = "com.google.dagger:dagger-android:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
            Versions.com_google_dagger

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val room_ktx: String = "androidx.room:room-ktx:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val room_rxjava2: String = "androidx.room:room-rxjava2:" + Versions.androidx_room

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_core: String = "androidx.test:core:" + Versions.androidx_test

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test

    /**
     * https://github.com/mockito/mockito
     */
    const val mockito_android: String = "org.mockito:mockito-android:" + Versions.org_mockito

    /**
     * https://github.com/mockito/mockito
     */
    const val mockito_core: String = "org.mockito:mockito-core:" + Versions.org_mockito

    /**
     * https://developer.android.com/studio
     */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/testing
     */
    const val androidx_test_ext_junit: String = "androidx.test.ext:junit:" +
            Versions.androidx_test_ext_junit

    const val io_fabric_tools_gradle: String = "io.fabric.tools:gradle:" +
            Versions.io_fabric_tools_gradle

    /**
     * http://junit.org
     */
    const val junit_junit: String = "junit:junit:" + Versions.junit_junit

    const val org_jetbrains_kotlin_android_extensions_gradle_plugin: String =
        "org.jetbrains.kotlin.android.extensions:org.jetbrains.kotlin.android.extensions.gradle.plugin:" +
                Versions.org_jetbrains_kotlin_android_extensions_gradle_plugin

    const val org_jetbrains_kotlin_android_gradle_plugin: String =
        "org.jetbrains.kotlin.android:org.jetbrains.kotlin.android.gradle.plugin:" +
                Versions.org_jetbrains_kotlin_android_gradle_plugin

    /**
     * https://github.com/JakeWharton/retrofit2-kotlinx-serialization-converter/
     */
    const val retrofit2_kotlinx_serialization_converter: String =
        "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:" +
                Versions.retrofit2_kotlinx_serialization_converter

    const val de_fayard_buildsrcversions_gradle_plugin: String =
        "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
                Versions.de_fayard_buildsrcversions_gradle_plugin

    const val org_jetbrains_kotlin_kapt_gradle_plugin: String =
        "org.jetbrains.kotlin.kapt:org.jetbrains.kotlin.kapt.gradle.plugin:" +
                Versions.org_jetbrains_kotlin_kapt_gradle_plugin

    const val com_github_spotbugs_gradle_plugin: String =
        "com.github.spotbugs:com.github.spotbugs.gradle.plugin:" +
                Versions.com_github_spotbugs_gradle_plugin

    /**
     * http://www.github.com/kotlintest/kotlintest
     */
    const val kotlintest_runner_junit4: String = "io.kotlintest:kotlintest-runner-junit4:" +
            Versions.kotlintest_runner_junit4

    /**
     * http://tools.android.com
     */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * https://github.com/airbnb/epoxy
     */
    const val epoxy_processor: String = "com.airbnb.android:epoxy-processor:" +
            Versions.epoxy_processor

    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    /**
     * http://www.jqno.nl/equalsverifier
     */
    const val equalsverifier: String = "nl.jqno.equalsverifier:equalsverifier:" +
            Versions.equalsverifier

    /**
     * https://github.com/MicroUtils/kotlin-logging
     */
    const val kotlin_logging: String = "io.github.microutils:kotlin-logging:" +
            Versions.kotlin_logging

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val preference_ktx: String = "androidx.preference:preference-ktx:" +
            Versions.preference_ktx

    /**
     * https://github.com/leolin310148/ShortcutBadger
     */
    const val shortcutbadger: String = "me.leolin:ShortcutBadger:" + Versions.shortcutbadger

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val vectordrawable: String = "androidx.vectordrawable:vectordrawable:" +
            Versions.vectordrawable

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val exifinterface: String = "androidx.exifinterface:exifinterface:" +
            Versions.exifinterface

    const val firebase_core: String = "com.google.firebase:firebase-core:" + Versions.firebase_core

    /**
     * https://github.com/nomis/slf4j-android/wiki
     */
    const val slf4j_android: String = "uk.uuid.slf4j:slf4j-android:" + Versions.slf4j_android

    /**
     * http://assertj.org
     */
    const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val fragment_ktx: String = "androidx.fragment:fragment-ktx:" + Versions.fragment_ktx

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    const val crashlytics: String = "com.crashlytics.sdk.android:crashlytics:" +
            Versions.crashlytics

    /**
     * https://developer.android.com/studio
     */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * http://www.slf4j.org
     */
    const val slf4j_jdk14: String = "org.slf4j:slf4j-jdk14:" + Versions.slf4j_jdk14

    /**
     * https://github.com/JakeWharton/ThreeTenABP/
     */
    const val threetenabp: String = "com.jakewharton.threetenabp:threetenabp:" +
            Versions.threetenabp

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val annotation: String = "androidx.annotation:annotation:" + Versions.annotation

    /**
     * http://fb-contrib.mebigfatguy.com
     */
    const val sb_contrib: String = "com.mebigfatguy.sb-contrib:sb-contrib:" + Versions.sb_contrib

    /**
     * https://developer.android.com/jetpack/androidx
     */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * https://github.com/ReactiveX/RxAndroid
     */
    const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * https://github.com/ReactiveX/RxKotlin
     */
    const val rxkotlin: String = "io.reactivex.rxjava2:rxkotlin:" + Versions.rxkotlin

    /**
     * https://spotbugs.github.io/
     */
    const val spotbugs: String = "com.github.spotbugs:spotbugs:" + Versions.spotbugs

    /**
     * https://github.com/ReactiveX/RxJava
     */
    const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

    /**
     * https://developer.android.com/studio
     */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * https://github.com/airbnb/epoxy
     */
    const val epoxy: String = "com.airbnb.android:epoxy:" + Versions.epoxy

    /**
     * https://github.com/airbnb/mvrx
     */
    const val mvrx: String = "com.airbnb.android:mvrx:" + Versions.mvrx
}
